# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
		def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
		    l = head
		    r = head
		    
		    # move right pointer ahead n nodes
		    for i in range(n):
		        r = r.next
		    
		    # special case, remove head
		    if r is None: # null check
		        head = head.next
		        return head
		
		    # move both forward until r is at the end of the list
		    # when r.next = null, I'm next to the node that needs to be deleted
		    while r.next:
		        l = l.next
		        r = r.next
				
				# delete
		    l.next = l.next.next
		    return head