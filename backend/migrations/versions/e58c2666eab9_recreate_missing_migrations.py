"""recreate missing migrations

Revision ID: e58c2666eab9
Revises: 
Create Date: 2024-11-13 20:13:11.556314

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e58c2666eab9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('badges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.Enum('CONTENT', 'AWARD', name='badgetype'), nullable=False),
    sa.Column('criteria_expression', sa.String(length=255), nullable=True),
    sa.Column('event_type', sa.Enum('COMPLETE_MODULE', 'UNIT_COMPLETION', 'QUIZ_PERFECT_SCORE', 'STREAK_ACHIEVEMENT', name='eventtype'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('badges', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_badges_event_type'), ['event_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_badges_title'), ['title'], unique=True)

    op.create_table('courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('goals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('metric', sa.Enum('COMPLETE_MODULES', 'EARN_GEMS', 'EXTEND_STREAK', name='metrictype'), nullable=False),
    sa.Column('requirement', sa.Integer(), nullable=False),
    sa.Column('time_period', sa.Enum('DAILY', 'MONTHLY', name='timeperiodtype'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('password', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('streak', sa.Integer(), nullable=True),
    sa.Column('gems', sa.Integer(), nullable=True),
    sa.Column('leaderboard_on', sa.Boolean(), nullable=True),
    sa.Column('weekly_review_done', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('daily_user_activity',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('gems_earned', sa.Integer(), nullable=True),
    sa.Column('modules_completed', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'date')
    )
    op.create_table('units',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_badges',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('badge_id', sa.Integer(), nullable=False),
    sa.Column('date_earned', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['badge_id'], ['badges.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'badge_id')
    )
    op.create_table('user_goals',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('goal_id', sa.Integer(), nullable=False),
    sa.Column('date_assigned', sa.DateTime(), nullable=False),
    sa.Column('date_completed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['goal_id'], ['goals.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'goal_id')
    )
    op.create_table('modules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unit_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('module_type', sa.Enum('CONCEPT_GUIDE', 'PYTHON_GUIDE', 'RECOGNITION_GUIDE', 'QUIZ', 'CHALLENGE', 'CHALLENGE_SOLUTION', 'BONUS_CHALLENGE', name='moduletype'), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['unit_id'], ['units.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_units',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('unit_id', sa.Integer(), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['unit_id'], ['units.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'unit_id')
    )
    op.create_table('hints',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['modules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quiz_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['modules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('quiz_questions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_quiz_questions_module_id'), ['module_id'], unique=False)

    op.create_table('user_modules',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('open', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['module_id'], ['modules.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'module_id')
    )
    op.create_table('quiz_question_options',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('option_text', sa.Text(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.Column('option_type', sa.Enum('PYTHON', 'RECOGNITION', 'CONCEPT', name='quiztype'), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['quiz_questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('quiz_question_options', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_quiz_question_options_question_id'), ['question_id'], unique=False)

    op.create_table('user_quiz_questions',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('last_practiced_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['quiz_questions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'question_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_quiz_questions')
    with op.batch_alter_table('quiz_question_options', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_quiz_question_options_question_id'))

    op.drop_table('quiz_question_options')
    op.drop_table('user_modules')
    with op.batch_alter_table('quiz_questions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_quiz_questions_module_id'))

    op.drop_table('quiz_questions')
    op.drop_table('hints')
    op.drop_table('user_units')
    op.drop_table('modules')
    op.drop_table('user_goals')
    op.drop_table('user_badges')
    op.drop_table('units')
    op.drop_table('daily_user_activity')
    op.drop_table('users')
    op.drop_table('goals')
    op.drop_table('courses')
    with op.batch_alter_table('badges', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_badges_title'))
        batch_op.drop_index(batch_op.f('ix_badges_event_type'))

    op.drop_table('badges')
    # ### end Alembic commands ###
