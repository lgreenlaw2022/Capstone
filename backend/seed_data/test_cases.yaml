test_cases:
# Hash maps
  - module_type: "CHALLENGE"
    module_title: "Contains Duplicate"
    target_runtime: O_N
    test_cases:
      - input: "[0,1,2,3,0]"
        outputs:
          - "true"
      - input: "[-1,-1,-2,-3,-4,-1]"
        outputs:
          - "true"
      - input: "[1,2,3,4,5,6,7,8,9,10]"
        outputs:
          - "false"

  - module_type: "BONUS_CHALLENGE"
    module_title: "Longest Substring Without Repeating Characters"
    target_runtime: O_N
    test_cases:
      - input: "aab cd aab"
        outputs:
          - "4"
      - input: "!@#$%^&*()!@#"
        outputs:
          - "10"
      - input: "a"
        outputs:
          - "1"

# Linked Lists
  - module_type: "CHALLENGE"
    module_title: "Remove Nth Node From End of List"
    target_runtime: O_N
    test_cases:
      - input: "[1,2,3,4,5] n=5"
        outputs:
          - "[2,3,4,5]"
      - input: "[1,2,3] n=1"
        outputs:
          - "[1,2]"
      - input: "[1] n=1"
        outputs:
          - "[]"

  - module_type: "BONUS_CHALLENGE"
    module_title: "Reverse Linked List"
    target_runtime: O_N
    test_cases:
      - input: "[2,2,2]"
        outputs:
          - "[2,2,2]"
      - input: "[1,5,3,2]"
        outputs:
          - "[2,3,5,1]"
      - input: "[]"
        outputs:
          - "[]"

# Binary Trees
  - module_type: "CHALLENGE"
    module_title: "Invert Binary Tree"
    target_runtime: O_N
    test_cases:
      - input: "[4,2,7,1,3,6,9]"
        outputs:
          - "[4,7,2,9,6,3,1]"
      - input: "[1,2,None,3]"
        outputs:
          - "[1,None,2,None,None,None,3]"
      - input: "[1,None,2,None,None,None,3]"
        outputs:
          - "[1,2,None,3]"

  - module_type: "BONUS_CHALLENGE"
    module_title: "Convert Sorted Array to Binary Search Tree"
    target_runtime: O_N
    test_cases:
      - input: "[-10,-3,0,5,9]"
        outputs:
          - "[0,-3,9,-10,None,5]"
          - "[0,-10,5,None,-3,None,9]"
      - input: "[1,2,3,4]"
        outputs:
          - "[2,1,4,None,None,3]"
          - "[3,1,4,None,2]"
      - input: "[5]"  
        outputs:
          - "[5]"

# Strings and Arrays
  - module_type: "CHALLENGE"
    module_title: "Is Subsequence"
    target_runtime: O_N
    test_cases:
      - input: "s = '', t = 'abc'"
        outputs:
          - "true"
      - input: "s = 'acb', t = 'ahbgdc'"
        outputs:
          - "false"
      - input: "s = 'aaaa', t = 'aaa'"
        outputs:
          - "false"

  - module_type: "BONUS_CHALLENGE"
    module_title: "Product of Array Except Self"
    target_runtime: O_N
    test_cases:
      - input: "[3,2,7,4]"
        outputs:
          - "[56,84,24,42]"
      - input: "[-2,-2,-2,-2]"
        outputs:
          - "[-8,-8,-8,-8]"
      - input: "[2,3,0,0,4,2]"
        outputs:
          - "[0,0,0,0,0,0]"

# Graphs
  - module_type: "CHALLENGE"
    module_title: "Number of Islands"
    target_runtime: O_N
    test_cases:
      - input: "[[1,1,1,1],[1,1,0,1],[1,1,0,0]]"
        outputs:
          - "1"
      - input: "[[1,1], [1,1]]"
        outputs:
          - "1"
      - input: "[[1,0,1],[0,1,0],[1,0,1]]"
        outputs:
          - "5"

  - module_type: "BONUS_CHALLENGE"
    module_title: "Max Area of Island"
    target_runtime: O_N
    test_cases:
      - input: "[[1,1,0,0,0],[1,1,0,0,0],[0,0,0,1,1],[0,0,0,1,1]]"
        outputs:
          - "4"
      - input: "[[1,1,1],[1,0,1],[1,1,1]]"
        outputs:
          - "8"
      - input: "[[0,0,0],[0,0,0],[0,0,0]]"
        outputs:
          - "0"
